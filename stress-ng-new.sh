#/bin/bash
clear

nohup [/home/d13/Dropbox/infraops/projects/stress/xterm.sh] &

escho 
function pause(){
	read -p "$*"
	}
echo "##################################################################################################################################################"
echo "##################################################################################################################################################"
echo "################################################## Certifique-se estar conectado a Internet ######################################################"
echo "########################################################### Atualizando o sistema  ###############################################################"
echo "##################################################################################################################################################"
echo "##################################################################################################################################################"
echo
sudo apt-get update && sudo apt-get upgrade -y
echo
echo "##################################################################################################################################################"
echo "##################################################################################################################################################"
echo "###################################################### instalando  stress-ng-test  ###############################################################"
echo "##################################################################################################################################################"
echo "##################################################################################################################################################"
echo
sudo apt-get install stress-ng -y
echo
echo "##################################################################################################################################################"
echo "############################################################# Escolhendo Laptop ##################################################################"
echo "##################################################################################################################################################"
echo "#############################################################  1 - Emborrachado ##################################################################"
echo "#############################################################  2 - Prata        ##################################################################"
echo "#############################################################  3 - Dourado      ##################################################################"
echo "#############################################################  4 - Aspero       ##################################################################"
echo "##################################################################################################################################################"
echo "##################################################################################################################################################"
echo
read -p "Informe o modelo do Laptop: " modelo
echo 
1="Emborrachado"
2="Prata" 
3="Dourado" 
4="Aspero"
echo
echo "##################################################################################################################################################"
echo "##################################################################################################################################################"
echo "###############################################################  stress-ng-test  #################################################################"
echo "##################################################################################################################################################"
echo "##################################################################################################################################################"
echo
# Parametros
#"- -cpu => faz um fork de processos a serem processados pela CPU"
#"--cpu-method all => executa um teste de stress em todas as CPUs disponiveis"
#"--cpu-ops => faz um fork de 10000 processos em cada CPUs disponivel"
#"--vm => faz um fork de alocacao de memoria para processos"
#"--vm-bytes => memoria alocado no teste"
#"-io => processos que farao multiplas chamadas de sync (flush na memoria para o disco)"
#"-hdd => quantidade de processos de escrita no disco"
#"--hdd-bytes => tamanho da escrita para cada processo"
#"--time-out => periodo do teste"
#"--metrics-brief => mostra a saida das metricas apos execucao"
$Prata time stress-ng --cpu 1 --cpu-method all --cpu-ops 10 --vm 1 --vm-bytes 1G --io 10 --hdd 5 --hdd-bytes 1G --timeout 10s --metrics-brief && exit
$Dourado time stress-ng --cpu 1 --cpu-method all --cpu-ops 10 --vm 1 --vm-bytes 1G --io 10 --hdd 5 --hdd-bytes 1G --timeout 18s --metrics-brief && exit
$Aspero time stress-ng --cpu 1 --cpu-method all --cpu-ops 10 --vm 1 --vm-bytes 1G --io 10 --hdd 5 --hdd-bytes 1G --timeout 24s --metrics-brief && exit
$Emborrachado time stress-ng --cpu 1 --cpu-method all --cpu-ops 10 --vm 1 --vm-bytes 1G --io 10 --hdd 5 --hdd-bytes 1G --timeout 32s --metrics-brief && exit
exit
 
#time stress-ng --cpu 4 --cpu-method all --cpu-ops 10000 --vm 6 --vm-bytes 1G --io 1000 --hdd 50 --hdd-bytes 4G --timeout 180s --metrics-brief
